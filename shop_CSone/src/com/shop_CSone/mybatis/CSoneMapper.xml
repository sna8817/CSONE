<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com/shop_CSone/mybatis/CSoneMapper.xml">
<!-- 여기서 SQL문을 쓴다! -->
	
	<!-- ProductDAO -->
	<!-- 베스트상품 -->
	<select id="bestView" resultType="com.shop_CSone.dto.ProductDTO">
		<![CDATA[
		SELECT * FROM (SELECT * FROM CSproduct
		ORDER BY p_purchasecnt DESC)
		WHERE ROWNUM <=8
		]]>
	</select>
	
	<!-- 신상품 -->
	<select id="newView" resultType="com.shop_CSone.dto.ProductDTO">
	<![CDATA[
		SELECT * FROM (SELECT * FROM CSproduct
        ORDER BY p_indate DESC)
        WHERE ROWNUM <=8
    ]]>
	</select>
<!-- ======================================================================================================== -->
	<!-- MemberDAO -->
	<!-- paramerType="경로" / 바인딩 변수를 사용하지 못하기 때문에 DTO의 값을 가져온다 (변수명 동일) -->
	<!-- 회원등록 -->
	<insert id="inputMember" parameterType="com.shop_CSone.dto.MemberDTO">
		INSERT INTO member (id, pw, name, phone, email, zipcode, addr1, addr2) 
		VALUES(#{id},#{pw},#{name},#{phone},#{email},#{zipcode},#{addr1},#{addr2}) 
	</insert>

	<!-- ID중복체크 -->
	<select id="confirmID" parameterType="String" resultType="String">
		SELECT id FROM member 
		WHERE id= #{userid}
	</select>

	<!-- 비밀번호 수정페이지  -->
	<select id="confirmPW" parameterType="com.shop_CSone.dto.MemberDTO" resultType="String">
		SELECT id FROM member
		WHERE id=#{id} AND pw=#{pw}
	</select>
	
	<!-- 로그인 기능 -->
	<select id="LoginCheck" parameterType="com.shop_CSone.dto.MemberDTO" resultType="com.shop_CSone.dto.MemberDTO">
		SELECT * FROM member 
		WHERE id=#{id} AND pw=#{pw}
	</select>

	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="com.shop_CSone.dto.MemberDTO">
		UPDATE member SET 
	    pw = #{pw}, name=#{name}, phone=#{phone}, email=#{email}, zipcode=#{zipcode}, addr1=#{addr1}, addr2=#{addr2} 
 		WHERE id=#{id} 
	</update>
	
	<!-- 회원정보 수정(비밀번호) -->
	<update id="updatePw" parameterType="com.shop_CSone.dto.MemberDTO">
		UPDATE member SET 
		pw=#{pw}
		WHERE id=#{id}
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteMember" parameterType="String">
		DELETE FROM member
		WHERE id=#{userid}
		<!-- UPDATE member SET 
		USERyn = 'no'
		WHERE id=#{userid] -->
	</delete>
	
	<!-- ============================================================================================================ -->
	<!-- BoardDAO -->
	
	
	<select id="countPaging" resultType="int">
	<![CDATA[
			SELECT count(bno)
			FROM CSBoard
			WHERE bno > 0 
	]]>
	<if test='flag=="1"'>
    	<![CDATA[AND title LIKE '%'||#{keyword}||'%']]> 
	</if>
    <if test='flag=="2"'>
        <![CDATA[AND content LIKE '%'||#{keyword}||'%']]>
	</if>
    <if test='flag=="3"'>
        <![CDATA[AND writer LIKE '%'||#{keyword}||'%']]>
	</if>
    <if test='flag=="4"'>
        <![CDATA[AND content LIKE '%'||#{keyword}||'%']]>
	</if>
    <if test='flag=="5"'>
        <![CDATA[AND title LIKE '%'||#{keyword}||'%' OR content LIKE '%'||#{keyword}||'%']]>
	</if>
	
<!-- 	
	<where>
	<if test="flag == 1">
		<![CDATA[AND title LIKE #{keyword}]]>
	</if>
	</where>
	 -->
	 
	</select>
		
	<select id="boardList" resultType="com.shop_CSone.dto.BoardDTO">
	<![CDATA[
			SELECT * FROM ( SELECT rownum rnum,
                a.*
                FROM ( SELECT *
                       FROM CSBoard
                       WHERE bno > 0
     ]]>
                       <if test='flag=="1"'>
                       <![CDATA[AND title LIKE '%'||#{keyword}||'%']]>
					   </if>
                       <if test='flag=="2"'>
                       <![CDATA[AND content LIKE '%'||#{keyword}||'%']]>
					   </if>
                       <if test='flag=="3"'>
                       <![CDATA[AND writer LIKE '%'||#{keyword}||'%']]>
					   </if>
                       <if test='flag=="4"'>
                       <![CDATA[AND content LIKE '%'||#{keyword}||'%']]>
					   </if>
                       <if test='flag=="5"'>
                       <![CDATA[AND title LIKE '%'||#{keyword}||'%' OR content LIKE '%'||#{keyword}||'%']]>
					   </if>
                       
    <![CDATA[                   
                       ORDER BY bno DESC
                       ) a
                )
			WHERE rnum BETWEEN #{pageStart} AND #{perPageNum}
	]]>
	</select>
	
	
	<!-- ============================================================================================================ -->
	<!-- 게시판 -->
	<select id="boardDetailView" resultType="com.shop_CSone.dto.BoardDTO">
		SELECT * FROM CSBoard
		WHERE bno = #{bno}
	</select>
	
	<update id="viewCnt">
		UPDATE CSBoard
			   SET viewcnt = viewcnt + 1
			   WHERE bno = #{bno}
	</update>
	
	<insert id="boardInsert" parameterType="com.shop_CSone.dto.BoardDTO">
		<choose>
			<when test="content !=  null">
			INSERT INTO CSBoard(bno, title, content, writer, filename, filesize)
			VALUES(seq_CSBoard.NEXTVAL, #{title}, #{content}, #{writer}, #{filename}, #{filesize})
			</when>
			<otherwise>
			INSERT INTO CSBoard(bno, title,writer, filename, filesize)
			VALUES(seq_CSBoard.NEXTVAL, #{title}, #{writer}, #{filename}, #{filesize})
			</otherwise>
		</choose>
	</insert>		
	
	
	<!-- 동적쿼리문 사용 if! -->
	<update id="boardUpdate" parameterType="com.shop_CSone.dto.BoardDTO">
		<choose>
			<when test="content !=  null">
			UPDATE CSBoard
			SET title=#{title}, content=#{content},
			<if test="filename != 'no'">
				filename = #{filename},
				filesize = #{filesize}
			</if>
			WHERE bno=#{bno}
			</when>
			<otherwise>
			UPDATE CSBoard
			SET title=#{title},
			<if test="filename != 'no'">
				filename = #{filename},
				filesize = #{filesize}
			</if>
			WHERE bno=#{bno}
			</otherwise>
		</choose>
	</update>	
	
	<delete id="boardDelete" parameterType="com.shop_CSone.dto.BoardDTO">
		DELETE FROM CSBoard
		WHERE bno=#{bno}
	</delete>
	
	
	
	
	<!-- ===================================================================================================================== -->
	<!-- ReplyDAO -->
	<select id="replyListAll" parameterType="String" resultType="com.shop_CSone.dto.ReplyDTO">
		SELECT * FROM CSBoardreply
		WHERE bno = #{bno}
		ORDER BY rno ASC
	</select>
	
	<insert id="replyInsert" parameterType="com.shop_CSone.dto.ReplyDTO">
		INSERT INTO CSBoardreply(rno, content, writer, bno)
		VALUES(#{rno},#{content},#{writer},#{bno})
	</insert>
	
	
	<delete id="replyDelete" parameterType="String">
		DELETE FROM CSBoardreply
		WHERE rno = #{rno}
	</delete>
</mapper>